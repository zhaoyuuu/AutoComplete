{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7CFB\\u7EDF\\u9ED8\\u8BA4\\\\\\u684C\\u9762\\\\shenzhenyunlian\\\\src\\\\component\\\\AutoComplete\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './index.css'; // props 接口\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// AutoComplete组件\nexport default function AutoComplete(props) {\n  _s();\n\n  // 下拉列表是否展示\n  let [isShow, setIsShow] = useState(false); // input中的内容\n\n  const [value, setValue] = useState(''); // onblur点击的元素是否是下拉列表\n\n  const [isList, setIsList] = useState(false);\n  const {\n    placeholder,\n    options\n  } = props; // focus时\n\n  const onFocus = () => {\n    setIsShow(true);\n  }; // blur时\n\n\n  const onBlur = () => {\n    setTimeout(() => {\n      if (!isList) {// 如果点击目标不是下拉列表\n        // setIsShow(false)\n        // console.log('不是下拉列表');\n      } else {// console.log('是下拉列表');\n      }\n\n      setIsList(false);\n      console.log('isList恢复了初始值：', isList);\n    }, 100);\n  }; // change\n\n\n  const onChange = () => {\n    console.log(111);\n  }; // 当下拉列表被点击\n\n\n  const selectValue = e => {\n    // 更新isList\n    console.log([...e.target.classList]);\n    setIsList([...e.target.classList].indexOf('li') >= 0);\n    console.log('isList更新啦：', isList); // 将li的数据填到input里\n\n    setValue(e.target.innerHTML);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"auto-complete\",\n      value: value,\n      placeholder: placeholder,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isShow ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown\",\n      children: options.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"li\",\n          onClick: selectValue,\n          children: \"111\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AutoComplete, \"Hlpiyi5mQpdlSIdSDacIUhfjVcc=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"names":["useState","AutoComplete","props","isShow","setIsShow","value","setValue","isList","setIsList","placeholder","options","onFocus","onBlur","setTimeout","console","log","onChange","selectValue","e","target","classList","indexOf","innerHTML","map","item","index"],"sources":["D:/系统默认/桌面/shenzhenyunlian/src/component/AutoComplete/index.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport './index.css'\r\n\r\n// props 接口\r\ninterface IProps {\r\n  placeholder: string,\r\n  options: Array<any>\r\n}\r\n\r\n// AutoComplete组件\r\nexport default function AutoComplete(props: IProps) {\r\n\r\n  // 下拉列表是否展示\r\n  let [isShow, setIsShow] = useState(false)\r\n  // input中的内容\r\n  const [value, setValue] = useState('')\r\n  // onblur点击的元素是否是下拉列表\r\n  const [isList, setIsList] = useState(false)\r\n\r\n  const {placeholder, options} = props\r\n\r\n  // focus时\r\n  const onFocus = () => {\r\n    setIsShow(true)\r\n  }\r\n  // blur时\r\n  const onBlur = () => {\r\n    setTimeout(() => {\r\n      if(!isList) {\r\n        // 如果点击目标不是下拉列表\r\n        // setIsShow(false)\r\n        // console.log('不是下拉列表');\r\n        \r\n      } else {\r\n        // console.log('是下拉列表');\r\n        \r\n      }\r\n      setIsList(false)\r\n      console.log('isList恢复了初始值：', isList);\r\n      \r\n    }, 100);\r\n    \r\n    \r\n  }\r\n  // change\r\n  const onChange = () => {\r\n    console.log(111);\r\n  }\r\n  // 当下拉列表被点击\r\n  const selectValue = (e:any) => {\r\n    // 更新isList\r\n    console.log([...e.target.classList]);\r\n    \r\n    setIsList([...e.target.classList].indexOf('li')>=0)\r\n    console.log('isList更新啦：', isList);\r\n    \r\n    // 将li的数据填到input里\r\n    setValue(e.target.innerHTML)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input \r\n        type=\"text\" className=\"auto-complete\" value={value}\r\n        placeholder={placeholder} onFocus={onFocus} \r\n        onBlur={onBlur} onChange={onChange}\r\n      />\r\n      {\r\n        isShow ? \r\n          (<ul className='dropdown'>\r\n            {\r\n              options.map((item,index) => {\r\n                return <li className='li' key={index} onClick={selectValue}>111</li>\r\n              })\r\n            }\r\n          </ul>) : null\r\n      }\r\n    </div>\r\n  );\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP,C,CAEA;;;AAMA;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAAqC;EAAA;;EAElD;EACA,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAAlC,CAHkD,CAIlD;;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CALkD,CAMlD;;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EAEA,MAAM;IAACS,WAAD;IAAcC;EAAd,IAAyBR,KAA/B,CATkD,CAWlD;;EACA,MAAMS,OAAO,GAAG,MAAM;IACpBP,SAAS,CAAC,IAAD,CAAT;EACD,CAFD,CAZkD,CAelD;;;EACA,MAAMQ,MAAM,GAAG,MAAM;IACnBC,UAAU,CAAC,MAAM;MACf,IAAG,CAACN,MAAJ,EAAY,CACV;QACA;QACA;MAED,CALD,MAKO,CACL;MAED;;MACDC,SAAS,CAAC,KAAD,CAAT;MACAM,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,MAA7B;IAED,CAbS,EAaP,GAbO,CAAV;EAgBD,CAjBD,CAhBkD,CAkClD;;;EACA,MAAMS,QAAQ,GAAG,MAAM;IACrBF,OAAO,CAACC,GAAR,CAAY,GAAZ;EACD,CAFD,CAnCkD,CAsClD;;;EACA,MAAME,WAAW,GAAIC,CAAD,IAAW;IAC7B;IACAJ,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGG,CAAC,CAACC,MAAF,CAASC,SAAb,CAAZ;IAEAZ,SAAS,CAAC,CAAC,GAAGU,CAAC,CAACC,MAAF,CAASC,SAAb,EAAwBC,OAAxB,CAAgC,IAAhC,KAAuC,CAAxC,CAAT;IACAP,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,MAA1B,EAL6B,CAO7B;;IACAD,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASG,SAAV,CAAR;EACD,CATD;;EAWA,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MADP;MACc,SAAS,EAAC,eADxB;MACwC,KAAK,EAAEjB,KAD/C;MAEE,WAAW,EAAEI,WAFf;MAE4B,OAAO,EAAEE,OAFrC;MAGE,MAAM,EAAEC,MAHV;MAGkB,QAAQ,EAAEI;IAH5B;MAAA;MAAA;MAAA;IAAA,QADF,EAOIb,MAAM,gBACH;MAAI,SAAS,EAAC,UAAd;MAAA,UAEGO,OAAO,CAACa,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAgB;QAC1B,oBAAO;UAAI,SAAS,EAAC,IAAd;UAA+B,OAAO,EAAER,WAAxC;UAAA;QAAA,GAAwBQ,KAAxB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD;IAFH;MAAA;MAAA;MAAA;IAAA,QADG,GAOK,IAdf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GArEuBxB,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}