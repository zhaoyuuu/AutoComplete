{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u7CFB\\u7EDF\\u9ED8\\u8BA4\\\\\\u684C\\u9762\\\\shenzhenyunlian\\\\src\\\\component\\\\AutoComplete\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './index.css'; // props 接口\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// AutoComplete组件\nexport default function AutoComplete(props) {\n  _s();\n\n  // 下拉列表是否展示\n  let [isShow, setIsShow] = useState(false); // input中的内容\n\n  const [value, setValue] = useState('');\n  const {\n    placeholder,\n    options\n  } = props; // focus时\n\n  const onFocus = () => {\n    setIsShow(true);\n  }; // blur时\n\n\n  const onBlur = e => {\n    // isList 点击的对象是否是下拉列表\n    let isList = [...e.target.classList].indexOf('li') >= 0;\n\n    if (!isList) {// setIsShow(false)\n    } else {\n      console.log(e.target);\n    }\n  }; // change\n\n\n  const onChange = () => {\n    console.log(111);\n  }; // 当下拉列表被点击\n\n\n  const selectValue = e => {// isList 点击的对象是否是下拉列表\n    // let isList = [...e.target.classList].indexOf('li')>=0\n    // if(!isList) {\n    //   setIsShow(false)\n    // } else {\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"auto-complete\",\n      placeholder: placeholder,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isShow ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown\",\n      children: options.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"li\",\n          onClick: selectValue,\n          children: \"111\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AutoComplete, \"L59bSYRzRe2KZ1MOpcPvTFpMcRk=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"names":["useState","AutoComplete","props","isShow","setIsShow","value","setValue","placeholder","options","onFocus","onBlur","e","isList","target","classList","indexOf","console","log","onChange","selectValue","map","item","index"],"sources":["D:/系统默认/桌面/shenzhenyunlian/src/component/AutoComplete/index.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport './index.css'\r\n\r\n// props 接口\r\ninterface IProps {\r\n  placeholder: string,\r\n  options: Array<any>\r\n}\r\n\r\n// AutoComplete组件\r\nexport default function AutoComplete(props: IProps) {\r\n\r\n  // 下拉列表是否展示\r\n  let [isShow, setIsShow] = useState(false)\r\n  // input中的内容\r\n  const [value, setValue] = useState('')\r\n\r\n  const {placeholder, options} = props\r\n\r\n  // focus时\r\n  const onFocus = () => {\r\n    setIsShow(true)\r\n  }\r\n  // blur时\r\n  const onBlur = (e: any) => {\r\n    // isList 点击的对象是否是下拉列表\r\n    let isList = [...e.target.classList].indexOf('li')>=0\r\n    if(!isList) {\r\n      // setIsShow(false)\r\n    } else {\r\n      console.log(e.target);\r\n      \r\n    }\r\n  }\r\n  // change\r\n  const onChange = () => {\r\n    console.log(111);\r\n  }\r\n  // 当下拉列表被点击\r\n  const selectValue = (e:any) => {\r\n    // isList 点击的对象是否是下拉列表\r\n    // let isList = [...e.target.classList].indexOf('li')>=0\r\n    // if(!isList) {\r\n    //   setIsShow(false)\r\n    // } else {\r\n\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input \r\n      type=\"text\" className=\"auto-complete\" \r\n      placeholder={placeholder} onFocus={onFocus} \r\n      onBlur={onBlur} onChange={onChange}\r\n      />\r\n      {\r\n        isShow ? \r\n          (<ul className='dropdown'>\r\n            {\r\n              options.map((item,index) => {\r\n                return <li className='li' key={index} onClick={selectValue}>111</li>\r\n              })\r\n            }\r\n          </ul>) : null\r\n      }\r\n    </div>\r\n  );\r\n}"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,aAAP,C,CAEA;;;AAMA;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAAqC;EAAA;;EAElD;EACA,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAAlC,CAHkD,CAIlD;;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAM;IAACO,WAAD;IAAcC;EAAd,IAAyBN,KAA/B,CAPkD,CASlD;;EACA,MAAMO,OAAO,GAAG,MAAM;IACpBL,SAAS,CAAC,IAAD,CAAT;EACD,CAFD,CAVkD,CAalD;;;EACA,MAAMM,MAAM,GAAIC,CAAD,IAAY;IACzB;IACA,IAAIC,MAAM,GAAG,CAAC,GAAGD,CAAC,CAACE,MAAF,CAASC,SAAb,EAAwBC,OAAxB,CAAgC,IAAhC,KAAuC,CAApD;;IACA,IAAG,CAACH,MAAJ,EAAY,CACV;IACD,CAFD,MAEO;MACLI,OAAO,CAACC,GAAR,CAAYN,CAAC,CAACE,MAAd;IAED;EACF,CATD,CAdkD,CAwBlD;;;EACA,MAAMK,QAAQ,GAAG,MAAM;IACrBF,OAAO,CAACC,GAAR,CAAY,GAAZ;EACD,CAFD,CAzBkD,CA4BlD;;;EACA,MAAME,WAAW,GAAIR,CAAD,IAAW,CAC7B;IACA;IACA;IACA;IACA;IAEA;EACD,CARD;;EAUA,oBACE;IAAA,wBACE;MACA,IAAI,EAAC,MADL;MACY,SAAS,EAAC,eADtB;MAEA,WAAW,EAAEJ,WAFb;MAE0B,OAAO,EAAEE,OAFnC;MAGA,MAAM,EAAEC,MAHR;MAGgB,QAAQ,EAAEQ;IAH1B;MAAA;MAAA;MAAA;IAAA,QADF,EAOIf,MAAM,gBACH;MAAI,SAAS,EAAC,UAAd;MAAA,UAEGK,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAgB;QAC1B,oBAAO;UAAI,SAAS,EAAC,IAAd;UAA+B,OAAO,EAAEH,WAAxC;UAAA;QAAA,GAAwBG,KAAxB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD;IAFH;MAAA;MAAA;MAAA;IAAA,QADG,GAOK,IAdf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GA1DuBrB,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}